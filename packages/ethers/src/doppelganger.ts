import { ethers } from 'ethers';
import { Contract, deploy } from './contract';
import { ContractReceipt, SendFunction, CallFunction } from './function';
import { Send } from './types';
import { AddressLike, resolveArguments } from './utils';

export const DoppelgangerCompilerOutput = {
  abi: [
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_sighashes",
          "type": "bytes4[]"
        },
        {
          "internalType": "string[]",
          "name": "_signatures",
          "type": "string[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_callee",
          "type": "address"
        }
      ],
      "name": "__doppelganger__mockForward",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_value",
          "type": "bytes"
        }
      ],
      "name": "__doppelganger__mockReturns",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "__doppelganger__mockReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  bytecode:
    '',
};

export type DoppelgangerArgs = [_sighashes: ethers.utils.BytesLike[], _signatures: string[]];

// prettier-ignore
export interface Doppelganger extends Contract<Doppelganger> {
  // Shortcut functions.
  __doppelganger__mockForward: Send<(data: ethers.utils.BytesLike, callee: AddressLike) => ethers.utils.Bytes, Doppelganger>;
  __doppelganger__mockReturns: Send<(data: ethers.utils.BytesLike, value: ethers.utils.BytesLike) => void, Doppelganger>;
  __doppelganger__mockReverts: Send<(data: ethers.utils.BytesLike, reason: string) => void, Doppelganger>;
  
  // Full function signature.
  '__doppelganger__mockForward(bytes,address)': Send<(data: ethers.utils.BytesLike, callee: AddressLike) => ethers.utils.Bytes, Doppelganger>;
  '__doppelganger__mockReturns(bytes,bytes)': Send<(data: ethers.utils.BytesLike, value: ethers.utils.BytesLike) => void, Doppelganger>;
  '__doppelganger__mockReverts(bytes,string)': Send<(data: ethers.utils.BytesLike, reason: string) => void, Doppelganger>;
}

const bytecode = DoppelgangerCompilerOutput.bytecode;
const abi = DoppelgangerCompilerOutput.abi;

export class Doppelganger extends Contract<Doppelganger> {
  public static async deploy(signer: ethers.Signer, ...args: DoppelgangerArgs): Promise<Doppelganger> {
    const address = ethers.constants.AddressZero;
    const contract = new Doppelganger(abi, address, signer);
    const receipt = await deploy(contract, bytecode ?? '0x', ...args);
    return contract.attach(receipt.contractAddress);
  }
}
