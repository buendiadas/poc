import { ethers } from 'ethers';
import { Contract, deploy } from './contract';
import { Send } from './types';

export const DoppelgangerCompilerOutput = {
  abi: [
    {
      stateMutability: 'payable',
      type: 'fallback',
    },
    {
      inputs: [
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
        {
          internalType: 'bytes',
          name: 'value',
          type: 'bytes',
        },
      ],
      name: '__doppelganger__mockReturns',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: '__doppelganger__mockReverts',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode:
    '608060405234801561001057600080fd5b50610bb0806100206000396000f3fe6080604052600436106100375760003560e01c8062ebfdbb146101195780630ad4c242146101ec57806377ba60ad1461034b57610038565b5b6000610042610413565b9050600115158160000160019054906101000a900460ff16151514156100705761006a61064f565b50610117565b610115816001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561010b5780601f106100e05761010080835404028352916020019161010b565b820191906000526020600020905b8154815290600101906020018083116100ee57829003601f168201915b50505050506106bd565b505b005b34801561012557600080fd5b506101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506106c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b1578082015181840152602081019050610196565b50505050905090810190601f1680156101de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f857600080fd5b506103496004803603604081101561020f57600080fd5b810190808035906020019064010000000081111561022c57600080fd5b82018360208201111561023e57600080fd5b8035906020019184600183028401116401000000008311171561026057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102c357600080fd5b8201836020820111156102d557600080fd5b803590602001918460018302840111640100000000831117156102f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108c3565b005b34801561035757600080fd5b506104116004803603602081101561036e57600080fd5b810190808035906020019064010000000081111561038b57600080fd5b82018360208201111561039d57600080fd5b803590602001918460018302840111640100000000831117156103bf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610961565b005b60008060008036604051808383808284378083019250505092505050604051809103902081526020019081526020016000209050600115158160000160009054906101000a900460ff161515141561046a5761064c565b60008080357fffffffff000000000000000000000000000000000000000000000000000000001660405160200180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004019150506040516020818303038152906040528051906020012081526020019081526020016000209050600115158160000160009054906101000a900460ff16151514156105095761064c565b6105366000357fffffffff00000000000000000000000000000000000000000000000000000000166106c5565b6040516020018080610b546027913960270182805190602001908083835b602083106105775780518252602082019150602081019050602083039250610554565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106115780820151818401526020810190506105f6565b50505050905090810190601f16801561063e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b90565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4d6f636b2072657665727400000000000000000000000000000000000000000081525060200191505060405180910390fd5b805160208201f35b606080600a67ffffffffffffffff811180156106e057600080fd5b506040519080825280601f01601f1916602001820160405280156107135781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061074457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106107a157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b60048110156108b95761080460108583600481106107ed57fe5b1a60f81b60f81c60ff16816107fe57fe5b04610a0d565b82600283600202018151811061081657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061086d601085836004811061085657fe5b1a60f81b60f81c60ff168161086757fe5b06610a0d565b82600383600202018151811061087f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508060010190506107d3565b5080915050919050565b6040518060600160405280600115158152602001600015158152602001828152506000808480519060200120815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610959929190610ab6565b509050505050565b6040518060600160405280600115158152602001600115158152602001604051806020016040528060008152508152506000808380519060200120815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610a06929190610ab6565b5090505050565b60008160ff16600011158015610a27575060098260ff1611155b15610a5c57817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610ab1565b8160ff16600a11158015610a745750600f8260ff1611155b15610aac57600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610ab1565b600080fd5b919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610af757805160ff1916838001178555610b25565b82800160010185558215610b25579182015b82811115610b24578251825591602001919060010190610b09565b5b509050610b329190610b36565b5090565b5b80821115610b4f576000816000905550600101610b37565b509056fe4d6f636b206f6e20746865206d6574686f64206973206e6f7420696e697469616c697a65643a20a2646970667358221220957a5a84fe274e44d63f1549ab49e6e589f5a61cb69ffbc361cac34a68ffbbb264736f6c634300060c0033',
};

// prettier-ignore
export interface Doppelganger extends Contract<Doppelganger> {
  // Shortcut functions.
  __doppelganger__mockReturns: Send<(data: ethers.utils.BytesLike, value: ethers.utils.BytesLike) => void>;
  __doppelganger__mockReverts: Send<(data: ethers.utils.BytesLike) => void>;
  
  // Full function signature.
  '__doppelganger__mockReturns(bytes,bytes)': Send<(data: ethers.utils.BytesLike, value: ethers.utils.BytesLike) => void>;
  '__doppelganger__mockReverts(bytes)': Send<(data: ethers.utils.BytesLike) => void>;
}

const bytecode = DoppelgangerCompilerOutput.bytecode;
const abi = DoppelgangerCompilerOutput.abi;

export class Doppelganger extends Contract<Doppelganger> {
  public static deploy(signer: ethers.Signer): Promise<Doppelganger> {
    const contract = new Doppelganger(abi, '0x', signer);
    return deploy(contract, bytecode) as any;
  }
}
